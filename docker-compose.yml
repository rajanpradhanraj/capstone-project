version: '3.8'

services:
  # Product Catalog Service
  product-catalog-service:
    build: 
      context: ./product-catalog-service
      dockerfile: Dockerfile
    container_name: product-catalog-service
    ports:
      - "5001:5001"
    environment:
      - DATABASE_URL=sqlite:///products.db
      - FLASK_ENV=production
    volumes:
      - product_data:/app/data
    networks:
      - ecommerce-network
    restart: unless-stopped

  # Order Service
  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    container_name: order-service
    ports:
      - "5002:5002"
    environment:
      - DATABASE_URL=sqlite:///orders.db
      - PRODUCT_SERVICE_URL=http://product-catalog-service:5001
      - FLASK_ENV=production
    volumes:
      - order_data:/app/data
    depends_on:
      - product-catalog-service
    networks:
      - ecommerce-network
    restart: unless-stopped

  # API Gateway
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    ports:
      - "5000:5000"
    environment:
      - PRODUCT_SERVICE_URL=http://product-catalog-service:5001
      - ORDER_SERVICE_URL=http://order-service:5002
      - FLASK_ENV=production
    depends_on:
      - product-catalog-service
      - order-service
    networks:
      - ecommerce-network
    restart: unless-stopped

  # Frontend (Angular)
  frontend:
    build:
      context: ./projectfrontend\frontend
      dockerfile: Dockerfile
    container_name: ecommerce-frontend
    ports:
      - "4200:80"
    depends_on:
      - api-gateway
    networks:
      - ecommerce-network
    restart: unless-stopped

volumes:
  product_data:
    driver: local
  order_data:
    driver: local

networks:
  ecommerce-network:
    driver: bridge



